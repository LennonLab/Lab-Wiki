<?php

# This file was automatically generated by the MediaWiki installer.
# If you make manual changes, please keep track in case you need to
# recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http:/s/www.mediawiki.org/wiki/Manual:Configuration_settings

# If you customize your file layout, set $IP to the directory that contains
# the other MediaWiki files. It will be used as a base to locate files.

# We define this to allow the configuration file to be explicitly
# located in /etc/mediawiki.
# Change this if you are setting up multisite wikis on your server.
define('MW_INSTALL_PATH','/ip/lennon/www');

if( defined( 'MW_INSTALL_PATH' ) ) {
	$IP = MW_INSTALL_PATH;
} else {
	$IP = dirname( __FILE__ );
}

$path = array( $IP, "$IP/includes", "$IP/languages" );
set_include_path( implode( PATH_SEPARATOR, $path ) . PATH_SEPARATOR . get_include_path() );

# Error Reporting
# error_reporting( E_ALL );
# ini_set( 'display_errors', 1);
# $wgDebugLogFile = "/ip/lennon/LennonWiki-debug_log.txt";

# Load Default Settings
require_once( "$IP/includes/DefaultSettings.php" );

# Site Name
$wgSitename = 'Lennon Lab Wiki';

if ( $wgCommandLineMode ) {
	if ( isset( $_SERVER ) && array_key_exists( 'REQUEST_METHOD', $_SERVER ) ) {
		die( "This script must be run from the command line\n" );
	}
}
## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "http://www.indiana.edu/~lennon";
$wgScriptExtension  = ".php";

## UPO means: this is also a user preference option

$wgEnableEmail      = true;
$wgEnableUserEmail  = false; # UPO

$wgEmergencyContact = "webmaster@localhost";
$wgPasswordSender   = "webmaster@localhost";

$wgEnotifUserTalk   = true; # UPO
$wgEnotifWatchlist  = true; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype           = "mysql";
$wgDBserver         = "mysql.uits.iu.edu:3306";
$wgDBname           = "lennon_wikidb2";
$wgDBuser           = "lennon_wikiuser";
$wgDBpassword       = "easy23";

# MySQL specific settings
$wgDBprefix         = "lennon_";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5         = true;

## Shared memory settings
$wgMainCacheType    = CACHE_NONE;
$wgMemCachedServers = array();

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads    = true;
$wgFileExtensions   = array_merge($wgFileExtensions, array('doc','xls','ppt','pdf','png','gif','jpeg','tff','xlsx','pptx','ps','swf'));
$wgStrictFileExtensions = false;

# $wgUseImageMagick = true;
# $wgImageMagickConvertCommand = "/usr/bin/convert";

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale      = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
# $wgHashedUploadDirectory = false;

## If you have the appropriate support software installed
## you can enable inline LaTeX equations:
$wgUseTeX           = false;

$wgLocalInterwiki   = $wgSitename;

$wgLanguageCode     = "en";

$wgProxyKey         = "d4722fc6973b0aac3056f163a3ec1a8317130e2e6009a3cca1424bca499391a0";

/**
 * Default skin, for new users and anonymous visitors. Registered users may
 * change this to any one of the other available skins in their preferences.
 */
wfLoadSkin( 'Vector' );
$wgDefaultSkin = 'Vector';
$wgHiddenPrefs[] = 'skin';

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgEnableCreativeCommonsRdf = true;
$wgRightsPage       = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl        = "http://www.gnu.org/copyleft/fdl.html";
$wgRightsText       = "GNU Free Documentation License 1.2";
$wgRightsIcon       = "${wgScriptPath}/skins/common/images/gnu-fdl.png";
# $wgRightsCode = "gfdl"; # Not yet used

$wgLogo             = "/~lennon/images/Synechococcus_infected_by_virus.png";

$wgThumbLimits = array(
        120,
        150,
        180,
        200,
        250,
        300
);

# Disable anonymous editing
$wgGroupPermissions['*']['edit'] = false;

# Prevent new user registrations except by sysops
$wgGroupPermissions['*']['createaccount'] = false;

# Disable reading by anonymous users
$wgGroupPermissions['*']['read'] = false;

# Prevent autoconfirmed user rights
$wgGroupPermissions['user']['edit'] = false;
$wgGroupPermissions['user']['createpage'] = false;

# Creat a new group for Lennon Lab Members
$wgGroupPermissions['LennonLab']['edit'] = true;
$wgGroupPermissions['LennonLab']['read'] = true;
$wgGroupPermissions['LennonLab']['createpage'] = true;

# Create a new group for read only access users
$wgGroupPermissions['Readers']['read'] = true;
$wgGroupPermissions['Readers']['edit'] = false;
$wgRevokePermission['Readers']['edit'] = true;

# Create a new group for system operatiors
$wgGroupPermissions['sysop']['userrights'] = true;

# But allow access the login page or else there will be no way to log in!
# NOTE: You also need to provide access here to the .css and .js files that the
# allowed pages attempt to load; otherwise, users will get errors on the page
# when they attempt to load it (Internet Explorer will complain about the errors;
# Firefox will show them in its error console)
# [You also might want to add access to "Main Page", "Wikipedia:Help", etc.)
$wgWhitelistRead    = array ("Main Page", "People", "Publications", "Special:Userlogin", "MediaWiki:Common.css", "MediaWiki:Common.js", "MediaWiki:Monobook.css", "MediaWiki:Monobook.js", "-");

# path to GNU diff3 utility
$wgDiff3            = "/usr/bin/diff3";

# Disable force capital links. This allows pages to start with lowercase letters
$wgCapitalLinks     = false;

# Allow custom page titles
$wgRestrictDisplayTitle = false;

#max size for uploads, in bytes.
$wgMaxUploadSize = 1024*1024*10; # 10MB

# Set default target for external links
$wgExternalLinkTarget = '_blank';

# debian specific include:
if (is_file("/etc/mediawiki-extensions/extensions.php")) {
        include( "/etc/mediawiki-extensions/extensions.php" );
}

# When you make changes to this configuration file, this will make
# sure that cached pages are cleared.
$wgCacheEpoch = max( $wgCacheEpoch, gmdate( 'YmdHis', @filemtime( __FILE__ ) ) );

# Extensions
wfLoadExtension( 'ArticleToCategory2' );
$wgarticletocategory2ConfigBlacklist=false;
$wgGroupPermissions['*']['ArticleToCategory2'] = true;
$wgGroupPermissions['*']['ArticleToCategory2AddCat'] = false;

wfLoadExtension( 'ParserFunctions' );
$wgPFEnableStringFunctions = true;

wfLoadExtension( 'MultiBoilerplate' );
$wgMultiBoilerplateDiplaySpecialPage = true;
$wgMultiBoilerplateOptions[ "Protocols" ] = "Template:Protocols";
$wgMultiBoilerplateOptions[ "Field" ] = "Template:Field";
$wgMultiBoilerplateOptions[ "Computer" ] = "Template:Computer";
$wgMultiBoilerplateOptions[ "Recipes" ] = "Template:Recipes";
$wgMultiBoilerplateOptions[ "Lab Management" ] = "Template:Lab Management";
$wgMultiBoilerplateOptions[ "Blank" ] = "Template:Blank";

# Not Working!!!!!
#wfLoadExtension( 'DynamicFunctions' );
#wfLoadExtension( 'addfiletoarticle' );
#wfLoadExtension( 'UserFunctions' );
#wfLoadExtension( 'videoflash' );
#wfLoadExtension( 'NoTitle' );
#wfLoadExtension( 'Math.php' );
#wfLoadExtension( 'EtherpadLite' );


# Exceptions for Debugging
$wgShowExceptionDetails = true;

#MobileFrontend Configuration
#require_once("$IP/extensions/MobileFrontend/MobileFrontend.php");
$wgMobileFrontendLogo = "/~lennon/skins/common/images/Synechococcus_infected_by_virus_small.png";
$wgMFAutodetectMobileView = true;
